def isReleaseBuild = !project.hasProperty('devBuild')

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
if (isReleaseBuild) {
    apply plugin: 'com.google.firebase.firebase-perf'
}
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'
tasks.whenTaskAdded { task ->
    if (task.name == "assembleRelease") task.dependsOn 'updateReleasePlayVersion'
}

apply from: '../quality/quality.gradle'
apply from: '../quality/quality-android.gradle'

android {
    compileSdkVersion compileSdk

    defaultConfig {
        manifestPlaceholders = [appName: '@string/app_name']
        applicationId 'com.supercilex.robotscouter'
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode 1 // The version code is updated on each Travis build
        versionName '2.3.0'
        multiDexEnabled true
        resConfigs "en"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            def keystorePropertiesFile = file('keystore.properties')
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            manifestPlaceholders = [appName: 'Robot Scouter DEBUG']
            ext.alwaysUpdateBuildId = false
        }

        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // TODO Crashlytics doesn't support the new DSL yet so we need to downgrade
//            postprocessing {
//                removeUnusedCode true
//                removeUnusedResources true
//                obfuscate true
//                optimizeCode true
//                proguardFile 'proguard-rules.pro'
//            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

androidExtensions {
    experimental = true
    defaultCacheImplementation = "SPARSE_ARRAY"
}

play {
    track = 'alpha'
    serviceAccountEmail = 'google-play-auto-publisher@robot-scouter-app.iam.gserviceaccount.com'
    jsonFile = file('google-play-auto-publisher.json')
}

dependencies {
    implementation project(':shared')
    implementation project(':feature-teams')
    implementation project(':feature-scouts')
    implementation project(':feature-templates')
    implementation project(':feature-settings')
    implementation project(':feature-exports')

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.billingclient:billing:1.0'
    implementation 'uk.co.samuelwall:material-tap-target-prompt:2.7.0'

    implementation "com.google.firebase:firebase-perf:$playServicesVersion"
    implementation "com.google.firebase:firebase-invites:$playServicesVersion"
    implementation "com.google.firebase:firebase-messaging:$playServicesVersion"
}

apply plugin: 'com.google.gms.google-services'
